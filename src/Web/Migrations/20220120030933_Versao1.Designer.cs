// <auto-generated />
using System;
using AmbevWeb.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AmbevWeb.Migrations
{
    [DbContext(typeof(AmbevContext))]
    [Migration("20220120030933_Versao1")]
    partial class Versao1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.9");

            modelBuilder.Entity("AmbevWeb.Models.CashBackModel", b =>
                {
                    b.Property<int>("IdCachBack")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdCerveja")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdDiaDaSemana")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Porcentagem")
                        .HasColumnType("REAL");

                    b.HasKey("IdCachBack");

                    b.HasIndex("IdCerveja");

                    b.HasIndex("IdDiaDaSemana");

                    b.ToTable("CashBack");

                    b.HasData(
                        new
                        {
                            IdCachBack = 1,
                            IdCerveja = 1,
                            IdDiaDaSemana = 1,
                            Porcentagem = 25.0
                        },
                        new
                        {
                            IdCachBack = 2,
                            IdCerveja = 1,
                            IdDiaDaSemana = 2,
                            Porcentagem = 7.0
                        },
                        new
                        {
                            IdCachBack = 3,
                            IdCerveja = 1,
                            IdDiaDaSemana = 3,
                            Porcentagem = 6.0
                        },
                        new
                        {
                            IdCachBack = 4,
                            IdCerveja = 1,
                            IdDiaDaSemana = 4,
                            Porcentagem = 2.0
                        },
                        new
                        {
                            IdCachBack = 5,
                            IdCerveja = 1,
                            IdDiaDaSemana = 5,
                            Porcentagem = 10.0
                        },
                        new
                        {
                            IdCachBack = 6,
                            IdCerveja = 1,
                            IdDiaDaSemana = 6,
                            Porcentagem = 15.0
                        },
                        new
                        {
                            IdCachBack = 7,
                            IdCerveja = 1,
                            IdDiaDaSemana = 7,
                            Porcentagem = 20.0
                        },
                        new
                        {
                            IdCachBack = 8,
                            IdCerveja = 2,
                            IdDiaDaSemana = 1,
                            Porcentagem = 30.0
                        },
                        new
                        {
                            IdCachBack = 9,
                            IdCerveja = 2,
                            IdDiaDaSemana = 2,
                            Porcentagem = 5.0
                        },
                        new
                        {
                            IdCachBack = 10,
                            IdCerveja = 2,
                            IdDiaDaSemana = 3,
                            Porcentagem = 10.0
                        },
                        new
                        {
                            IdCachBack = 11,
                            IdCerveja = 2,
                            IdDiaDaSemana = 4,
                            Porcentagem = 15.0
                        },
                        new
                        {
                            IdCachBack = 12,
                            IdCerveja = 2,
                            IdDiaDaSemana = 5,
                            Porcentagem = 20.0
                        },
                        new
                        {
                            IdCachBack = 13,
                            IdCerveja = 2,
                            IdDiaDaSemana = 6,
                            Porcentagem = 25.0
                        },
                        new
                        {
                            IdCachBack = 14,
                            IdCerveja = 2,
                            IdDiaDaSemana = 7,
                            Porcentagem = 30.0
                        },
                        new
                        {
                            IdCachBack = 15,
                            IdCerveja = 3,
                            IdDiaDaSemana = 1,
                            Porcentagem = 35.0
                        },
                        new
                        {
                            IdCachBack = 16,
                            IdCerveja = 3,
                            IdDiaDaSemana = 2,
                            Porcentagem = 3.0
                        },
                        new
                        {
                            IdCachBack = 17,
                            IdCerveja = 3,
                            IdDiaDaSemana = 3,
                            Porcentagem = 5.0
                        },
                        new
                        {
                            IdCachBack = 18,
                            IdCerveja = 3,
                            IdDiaDaSemana = 4,
                            Porcentagem = 8.0
                        },
                        new
                        {
                            IdCachBack = 19,
                            IdCerveja = 3,
                            IdDiaDaSemana = 5,
                            Porcentagem = 13.0
                        },
                        new
                        {
                            IdCachBack = 20,
                            IdCerveja = 3,
                            IdDiaDaSemana = 6,
                            Porcentagem = 18.0
                        },
                        new
                        {
                            IdCachBack = 21,
                            IdCerveja = 3,
                            IdDiaDaSemana = 7,
                            Porcentagem = 25.0
                        },
                        new
                        {
                            IdCachBack = 22,
                            IdCerveja = 4,
                            IdDiaDaSemana = 1,
                            Porcentagem = 40.0
                        },
                        new
                        {
                            IdCachBack = 23,
                            IdCerveja = 4,
                            IdDiaDaSemana = 2,
                            Porcentagem = 10.0
                        },
                        new
                        {
                            IdCachBack = 24,
                            IdCerveja = 4,
                            IdDiaDaSemana = 3,
                            Porcentagem = 15.0
                        },
                        new
                        {
                            IdCachBack = 25,
                            IdCerveja = 4,
                            IdDiaDaSemana = 4,
                            Porcentagem = 15.0
                        },
                        new
                        {
                            IdCachBack = 26,
                            IdCerveja = 4,
                            IdDiaDaSemana = 5,
                            Porcentagem = 15.0
                        },
                        new
                        {
                            IdCachBack = 27,
                            IdCerveja = 4,
                            IdDiaDaSemana = 6,
                            Porcentagem = 20.0
                        },
                        new
                        {
                            IdCachBack = 28,
                            IdCerveja = 4,
                            IdDiaDaSemana = 7,
                            Porcentagem = 40.0
                        });
                });

            modelBuilder.Entity("AmbevWeb.Models.CervejaModel", b =>
                {
                    b.Property<int>("IdCerveja")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Estoque")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<double>("Preco")
                        .HasColumnType("REAL");

                    b.HasKey("IdCerveja");

                    b.ToTable("Cerveja");

                    b.HasData(
                        new
                        {
                            IdCerveja = 1,
                            Estoque = 2500,
                            Nome = "Skol",
                            Preco = 5.5
                        },
                        new
                        {
                            IdCerveja = 2,
                            Estoque = 2250,
                            Nome = "Brahma",
                            Preco = 5.25
                        },
                        new
                        {
                            IdCerveja = 3,
                            Estoque = 650,
                            Nome = "Stella",
                            Preco = 7.25
                        },
                        new
                        {
                            IdCerveja = 4,
                            Estoque = 850,
                            Nome = "Bohemia",
                            Preco = 6.8899999999999997
                        });
                });

            modelBuilder.Entity("AmbevWeb.Models.DiaDaSemanaModel", b =>
                {
                    b.Property<int>("IdDiaDaSemana")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.HasKey("IdDiaDaSemana");

                    b.ToTable("DiaDaSemana");

                    b.HasData(
                        new
                        {
                            IdDiaDaSemana = 1,
                            Nome = "Domingo"
                        },
                        new
                        {
                            IdDiaDaSemana = 2,
                            Nome = "Segunda-Feira"
                        },
                        new
                        {
                            IdDiaDaSemana = 3,
                            Nome = "Terça-Feira"
                        },
                        new
                        {
                            IdDiaDaSemana = 4,
                            Nome = "Quarta-Feira"
                        },
                        new
                        {
                            IdDiaDaSemana = 5,
                            Nome = "Quinta-Feira"
                        },
                        new
                        {
                            IdDiaDaSemana = 6,
                            Nome = "Sexta-Feira"
                        },
                        new
                        {
                            IdDiaDaSemana = 7,
                            Nome = "Sábado"
                        });
                });

            modelBuilder.Entity("AmbevWeb.Models.ItemVendaModel", b =>
                {
                    b.Property<int>("IdVenda")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdCerveja")
                        .HasColumnType("INTEGER");

                    b.Property<double>("FracaoCachBack")
                        .HasColumnType("REAL");

                    b.Property<int>("IdCashBack")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdSituacaoCashBack")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantidade")
                        .HasColumnType("INTEGER");

                    b.Property<double>("ValorUnitario")
                        .HasColumnType("REAL");

                    b.HasKey("IdVenda", "IdCerveja");

                    b.HasIndex("IdCerveja");

                    b.ToTable("ItemVenda");
                });

            modelBuilder.Entity("AmbevWeb.Models.SituacaoCashBackModel", b =>
                {
                    b.Property<int>("IdSituacaoCashBack")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.HasKey("IdSituacaoCashBack");

                    b.ToTable("SituacaoCashBack");

                    b.HasData(
                        new
                        {
                            IdSituacaoCashBack = 1,
                            Nome = "Disponível"
                        },
                        new
                        {
                            IdSituacaoCashBack = 2,
                            Nome = "Resgatado"
                        });
                });

            modelBuilder.Entity("AmbevWeb.Models.UsuarioModel", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataCadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("datetime('now', 'localtime')");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("Senha")
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("AmbevWeb.Models.VendaModel", b =>
                {
                    b.Property<int>("IdVenda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double?>("CashBack")
                        .HasColumnType("REAL");

                    b.Property<DateTime?>("DataEntrega")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataVenda")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdCliente")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("InicioVenda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("datetime('now', 'localtime')");

                    b.Property<double?>("ValorTotal")
                        .HasColumnType("REAL");

                    b.HasKey("IdVenda");

                    b.HasIndex("IdCliente");

                    b.ToTable("Venda");
                });

            modelBuilder.Entity("AmbevWeb.Models.ClienteModel", b =>
                {
                    b.HasBaseType("AmbevWeb.Models.UsuarioModel");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("char(14)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("TEXT");

                    b.ToTable("Cliente");

                    b.HasData(
                        new
                        {
                            IdUsuario = 1,
                            Email = "natalie.portman@ambev.com.br",
                            Nome = "Natalie Portman",
                            Senha = "c157a6c950350e1cff1c37cd370782ce",
                            CPF = "791.647.240-69",
                            DataNascimento = new DateTime(1981, 6, 9, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            IdUsuario = 2,
                            Email = "penelope.cruz@ambev.com.br",
                            Nome = "Penelope Cruz",
                            Senha = "7688ab571b8c9112c74f634b0942c5f4",
                            CPF = "409.579.270-10",
                            DataNascimento = new DateTime(1981, 6, 9, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            IdUsuario = 3,
                            Email = "sharon.stone@ambev.com.br",
                            Nome = "Sharon Stone",
                            Senha = "03d93326278650c09d0f825734230724",
                            CPF = "616.150.370-04",
                            DataNascimento = new DateTime(1958, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            IdUsuario = 4,
                            Email = "jennifer.connelly@ambev.com.br",
                            Nome = "Jennifer Connelly",
                            Senha = "fad05d338687a585d335d6d122034990",
                            CPF = "345.930.500-22",
                            DataNascimento = new DateTime(1970, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            IdUsuario = 5,
                            Email = "scarlett.johansson@ambev.com.br",
                            Nome = "Scarlett Johansson",
                            Senha = "318faad8da75364f28d3af4c01cf8783",
                            CPF = "139.385.260-25",
                            DataNascimento = new DateTime(1984, 4, 22, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            IdUsuario = 6,
                            Email = "liv.tyler@ambev.com.br",
                            Nome = "Liv Tyler",
                            Senha = "d2137db845f757d43f654f8eabc80762",
                            CPF = "932.830.890-94",
                            DataNascimento = new DateTime(1977, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            IdUsuario = 7,
                            Email = "jennifer.lopez@ambev.com.br",
                            Nome = "Jennifer Lopez",
                            Senha = "d30579c85039820a61f8426c5a12704d",
                            CPF = "074.477.660-03",
                            DataNascimento = new DateTime(1969, 6, 24, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            IdUsuario = 8,
                            Email = "gal.gadot@ambev.com.br",
                            Nome = "Gal Gadot",
                            Senha = "4fdf95910c5e7817123b3e09936e853f",
                            CPF = "760.947.580-72",
                            DataNascimento = new DateTime(1985, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            IdUsuario = 9,
                            Email = "odette.annable@com.br",
                            Nome = "Odette Annable",
                            Senha = "5f87be8e29c305ccd4ee19b0dd898f2b",
                            CPF = "141.237.860-57",
                            DataNascimento = new DateTime(1985, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            IdUsuario = 10,
                            Email = "jennifer.lawrence@ambev.com.br",
                            Nome = "Jennifer Lawrence",
                            Senha = "c4ad31baad701357a17d7389aa68b7e8",
                            CPF = "290.137.010-19",
                            DataNascimento = new DateTime(1990, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("AmbevWeb.Models.CashBackModel", b =>
                {
                    b.HasOne("AmbevWeb.Models.CervejaModel", "Cerveja")
                        .WithMany()
                        .HasForeignKey("IdCerveja")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AmbevWeb.Models.DiaDaSemanaModel", "DiaDaSemana")
                        .WithMany()
                        .HasForeignKey("IdDiaDaSemana")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cerveja");

                    b.Navigation("DiaDaSemana");
                });

            modelBuilder.Entity("AmbevWeb.Models.ItemVendaModel", b =>
                {
                    b.HasOne("AmbevWeb.Models.CervejaModel", "Cerveja")
                        .WithMany()
                        .HasForeignKey("IdCerveja")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AmbevWeb.Models.VendaModel", "Venda")
                        .WithMany("ItensVenda")
                        .HasForeignKey("IdVenda")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cerveja");

                    b.Navigation("Venda");
                });

            modelBuilder.Entity("AmbevWeb.Models.VendaModel", b =>
                {
                    b.HasOne("AmbevWeb.Models.ClienteModel", "Cliente")
                        .WithMany("Vendas")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("AmbevWeb.Models.ClienteModel", b =>
                {
                    b.HasOne("AmbevWeb.Models.UsuarioModel", null)
                        .WithOne()
                        .HasForeignKey("AmbevWeb.Models.ClienteModel", "IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AmbevWeb.Models.VendaModel", b =>
                {
                    b.Navigation("ItensVenda");
                });

            modelBuilder.Entity("AmbevWeb.Models.ClienteModel", b =>
                {
                    b.Navigation("Vendas");
                });
#pragma warning restore 612, 618
        }
    }
}
